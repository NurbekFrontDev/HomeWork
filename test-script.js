const jsConfetti = new JSConfetti();
const emojiSets = [
  ["üéâ", "‚ú®", "üéä", "ü•≥"],
  ["üçÄ", "üåü", "üç≠", "üåà"],
  ["üå∏", "üíê", "üå∫", "üåº", "üåª"],
  ["üî•", "üí•", "‚ö°", "üí´"],
  ["üçï", "üçî", "üçü", "üåÆ"],
  ["üê±", "üê∂", "üê≠", "ü¶ä"],
];
const correctSound = new Audio('sounds/correct.wav');
const wrongSound = new Audio('sounds/wrong.mp3');
correctSound.volume = 0.5;
wrongSound.volume = 0.5;
const header = document.getElementById("header");
const startBtn = document.getElementById("start-btn");
const restartBtn = document.getElementById("restart-btn");
const answersBox = document.querySelectorAll(".answer");
const answer1 = document.getElementById("answer1");
const answer2 = document.getElementById("answer2");
const answer3 = document.getElementById("answer3");
const answer4 = document.getElementById("answer4");
const textAnswer = document.getElementById("text-answer");
const submitAnswerBtn = document.getElementById("submit-answer-btn");
const feedback = document.getElementById("feedback");
const progress = document.getElementById("progress");
const answers = document.querySelector(".answers");

const questions = [
  {
    question: "1. –ß—Ç–æ –≤–µ—Ä–Ω—ë—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ typeof null?",
    answers: ['a) "null"', 'b) "object"', 'c) "undefined"', 'd) "boolean"'],
    correctAnswer: 1,
  },
  {
    question: "2. –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–µ—Ç–æ–¥ Array.prototype.map()?",
    answers: [
      "a) –ò–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤",
      "b) –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –Ω–µ –∏–∑–º–µ–Ω—è—è –∏—Å—Ö–æ–¥–Ω—ã–π",
      "c) –§–∏–ª—å—Ç—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã",
      "d) –°–æ–µ–¥–∏–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É",
    ],
    correctAnswer: 1,
  },
  {
    question: "3. –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É –≤—ã—Ä–∞–∂–µ–Ω–∏—è: [] + 1 + 2?",
    answers: ['a) "3"', 'b) "12"', "c) 3", "d) NaN"],
    correctAnswer: 1,
  },
  {
    question: "4. –ö–∞–∫–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å—Ç—Ä–æ–≥–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è?",
    answers: ["a) ==", "b) =", "c) !=", "d) ==="],
    correctAnswer: 3,
  },
  {
    question: "5. –ß—Ç–æ –¥–µ–ª–∞–µ—Ç event.preventDefault()?",
    answers: [
      "a) –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è",
      "b) –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç",
      "c) –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
      "d) –ü—Ä–µ—Ä—ã–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏",
    ],
    correctAnswer: 2,
  },
  {
    question: "6. –ß—Ç–æ —Ç–∞–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ (closure)?",
    answers: [
      'a) –û–±—ä–µ–∫—Ç —Å –º–µ—Ç–æ–¥–∞–º–∏"',
      "b) –§—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞",
      "c) –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Å–≤–æ—ë –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ",
      "d) –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö",
    ],
    correctAnswer: 2,
  },
  {
    question: "7. –ö–∞–∫–æ–π –±—É–¥–µ—Ç –≤—ã–≤–æ–¥: console.log(0.1 + 0.2 === 0.3)?",
    answers: ["a) true", "b) false", "c) undefined", 'd) TypeError"'],
    correctAnswer: 1,
  },
  {
    question: "8. –ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–±–ª–∞—Å—Ç—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤–∏–¥–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è?",
    correctAnswer: "–æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏",
  },
  {
    question: "9. –ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö —É –∑–Ω–∞—á–µ–Ω–∏—è true?",
    correctAnswer: "–±—É–ª–µ–≤—ã–π",
  },
  {
    question:
      "10. –ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–ø–æ–¥–æ–±–Ω—ã–π –æ–±—ä–µ–∫—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π document.querySelectorAll()?",
    correctAnswer: "NodeList",
  },
];

let currentIndex = 0;
let score = 0;
let currentQuestion = null;
const allAnswers = [answer1, answer2, answer3, answer4];

function getRandomEmojiSet() {
  const index = Math.floor(Math.random() * emojiSets.length);
  return emojiSets[index];
}

submitAnswerBtn.addEventListener("click", function (e) {
  if (!textAnswer.value.trim()) {
    feedback.textContent = "–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç!";
    feedback.classList.add("incorrect");
    return;
  }

  if (textAnswer && textAnswer.value.trim().toLowerCase() === currentQuestion.correctAnswer.toLowerCase()) {
    const emojis = getRandomEmojiSet();

    correctSound.play();

    feedback.textContent = "Correct‚úÖ";
    feedback.classList.add("correct");

    score++;

    jsConfetti.addConfetti({
      emojis: emojis,
      emojiSize: 40,
      confettiNumber: 60,
    });
  } else {
    wrongSound.play();

    feedback.textContent = "Wrong‚ùå";
    feedback.classList.add("incorrect");
  }

  setTimeout(() => {
    currentIndex++;

    if (currentIndex < questions.length) {
      showNextQuestion();
    } else {
      showResult();
    }
  }, 2000);

  return;
});

function showNextQuestion() {
  currentQuestion = questions[currentIndex];
  progress.textContent = `–í–æ–ø—Ä–æ—Å ${currentIndex + 1} –∏–∑ ${questions.length}`;

  if (!currentQuestion.answers) {
    textAnswer.style.display = "block";
    submitAnswerBtn.style.display = "block";

    header.textContent = currentQuestion.question;
    answer1.style.display = "none";
    answer2.style.display = "none";
    answer3.style.display = "none";
    answer4.style.display = "none";

    feedback.textContent = "";
    feedback.classList.remove("correct", "incorrect");

    textAnswer.value = "";
  } else {
    answer1.style.display = "block";
    answer2.style.display = "block";
    answer3.style.display = "block";
    answer4.style.display = "block";
    header.textContent = currentQuestion.question;
    answer1.textContent = currentQuestion.answers[0];
    answer2.textContent = currentQuestion.answers[1];
    answer3.textContent = currentQuestion.answers[2];
    answer4.textContent = currentQuestion.answers[3];

    allAnswers.forEach(function (answer, index) {
      answer.onclick = () => handleAnswerClick(index);
    });

    allAnswers.forEach((a) => {
      a.classList.remove("correct", "incorrect");
    });

    feedback.textContent = "";
    feedback.classList.remove("correct", "incorrect");
  }
}

function handleAnswerClick(index) {
  currentQuestion = questions[currentIndex];
  const answers = [answer1, answer2, answer3, answer4];

  if (index === currentQuestion.correctAnswer) {
    correctSound.play();
    feedback.textContent = "Correct‚úÖ";
    feedback.classList.add("correct");
    score++;
    const emojis = getRandomEmojiSet();
    jsConfetti.addConfetti({
      emojis: emojis,
      emojiSize: 40,
      confettiNumber: 60,
    });
  } else {
    wrongSound.play();
    feedback.textContent = "Wrong‚ùå";
    feedback.classList.add("incorrect");
    answers[currentQuestion.correctAnswer].classList.add("correct");
  }

  setTimeout(() => {
    currentIndex++;

    if (currentIndex < questions.length) {
      showNextQuestion();
    } else {
      showResult();
    }
  }, 2000);
}

function showResult() {
  header.textContent = `–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –Ω–∞—à–ª–∏ ${score} –∏–∑ 10 –≤–æ–ø—Ä–æ—Å–æ–≤ (${Math.round(
    (score / questions.length) * 100
  )}%)`;
  answer1.textContent = "";
  answer2.textContent = "";
  answer3.textContent = "";
  answer4.textContent = "";
  restartBtn.style.display = "block";
  feedback.textContent = "";
  feedback.classList.remove("correct", "incorrect");
  progress.textContent = "";
  textAnswer.style.display = "none";
  submitAnswerBtn.style.display = "none";

  allAnswers.forEach(function (answer, index) {
    answer.onclick = null;
  });
}

startBtn.addEventListener("click", () => {
  startBtn.style.display = "none";
  answers.style.display = "block";

  showNextQuestion();
});

restartBtn.addEventListener("click", () => {
  currentIndex = 0;
  score = 0;
  answers.style.display = "block";

  feedback.textContent = "";
  feedback.classList.remove("correct", "incorrect");
  progress.textContent = "";
  textAnswer.style.display = "none";
  submitAnswerBtn.style.display = "none";
  restartBtn.style.display = "none";
  startBtn.style.display = "block";

  header.textContent = "–ü—Ä–æ–≤–µ—Ä—å —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π –ø–æ JavaScript";

  allAnswers.forEach(function (answer, index) {
    answer.onclick = null;
  });
});
